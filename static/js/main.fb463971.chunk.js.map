{"version":3,"sources":["components/Notes/NotesContainer.js","components/Notes/NotesList.js","components/Notes/Note.js","components/Notes/NoteForm.js","components/Preview/index.js","components/Message/index.js","components/Alert/index.js","App.js","index.js"],"names":["Notes","props","className","children","NotesList","Note","title","noteClicked","classes","active","push","join","onClick","NoteForm","formTitle","content","titleChanged","contentChanged","submitClicked","submitText","cancel","type","name","placeholder","value","onChange","rows","href","Preview","Message","Alert","validationMessages","map","message","index","App","useState","notes","setNotes","setTitle","setContent","selectedNote","setSelectedNote","creating","setCreating","editing","setEditing","validationErrors","setValidationErrors","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","length","setTimeout","saveToLocalStorage","item","validate","passed","changeTitleHandler","event","target","changeContentHandler","saveNoteHandler","note","id","Date","updatedNotes","updateNoteHandler","findIndex","NotesContainer","noteId","find","noteDisplay","editNoteHandler","noteIndex","splice","deleteNoteHandler","getPreview","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb463971.chunk.js","sourcesContent":["import React from 'react';\n\nconst Notes = (props) => {\n    return (\n        <div className=\"notes-section\">\n            {props.children}\n        </div>\n    )\n};\n\nexport default Notes;","import React from 'react';\r\n\r\nconst NotesList = (props) => {\r\n    return (\r\n        <ul className=\"notes-list\">\r\n            {props.children}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default NotesList;","import React from 'react';\r\n\r\nconst Note = (props) => {\r\n    const {title, noteClicked, active} = props;\r\n    let classes = ['note-item'];\r\n    if (active) {\r\n        classes.push('active')\r\n    }\r\n    return (\r\n        <li className={classes.join(' ')} onClick={noteClicked}>{title}</li>\r\n    );\r\n};\r\n\r\nexport default Note;","import React from 'react';\r\n\r\nconst NoteForm = (props) => {\r\n    const {formTitle, title, content, titleChanged, contentChanged, submitClicked, submitText, cancel} = props;\r\n    return (\r\n        <div>\r\n            <h2>{formTitle}</h2>\r\n            <div>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    className=\"form-input mb-30\"\r\n                    placeholder=\"العنوان\"\r\n                    value={title}\r\n                    onChange={titleChanged}\r\n                />\r\n\r\n                <textarea\r\n                    rows=\"10\"\r\n                    name=\"content\"\r\n                    className=\"form-input\"\r\n                    placeholder=\"النص\"\r\n                    onChange={contentChanged}\r\n                    value={content}\r\n                />\r\n\r\n                <a href=\"#\" className=\"button green\" onClick={submitClicked}>{submitText}</a>\r\n                {cancel && <a href=\"#\" className=\"button button--cancel yellow\" onClick={cancel}>الغاء</a>}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NoteForm;","import React from 'react';\n\nconst Preview = (props) => (\n    <div className=\"preview-section\">\n        {props.children}\n    </div>\n);\n\nexport default Preview;","import React from 'react';\n\nconst Message = (props) => (\n    <h2 className=\"center\">{props.title}</h2>\n);\n\nexport default Message;","import React from \"react\";\n\nconst Alert = props => {\n    return (\n        <div className=\"alert-container\">\n        <ul>\n          {props.validationMessages.map((message, index) => (\n            <li key={index}>{message}</li>\n          ))}\n        </ul>\n      </div>\n    );\n};\n\nexport default Alert;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport NotesContainer from './components/Notes/NotesContainer';\nimport NotesList from './components/Notes/NotesList';\nimport Note from './components/Notes/Note';\nimport NoteForm from './components/Notes/NoteForm';\nimport Preview from './components/Preview';\nimport Message from './components/Message';\nimport Alert from './components/Alert';\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [selectedNote, setSelectedNote] = useState(null);\n  const [creating, setCreating] = useState(false);\n  const [editing, setEditing] = useState(false);\n  const [validationErrors, setValidationErrors] = useState([]);\n\n  useEffect(() => {\n    if (localStorage.getItem('notes')) {\n      setNotes(JSON.parse(localStorage.getItem('notes')));\n    } else {\n      localStorage.setItem('notes', JSON.stringify([]));\n      setNotes([]);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (validationErrors.length !== 0) {\n      setTimeout(() => {\n        setValidationErrors([]);\n      }, 3000);\n    }\n  }, [validationErrors]);\n\n  // حفظ في الذاكرة المحلية\n  const saveToLocalStorage = (name, item) => {\n    localStorage.setItem(name, JSON.stringify(item));\n  };\n\n  // التحقق من البيانات\n  const validate = () => {\n    const validationErrors = [];\n    let passed = true;\n    if (!title) {\n      validationErrors.push('الرجاء إدخال عنوان الملاحظة');\n      passed = false;\n    }\n    if (!content) {\n      validationErrors.push('الرجاء إدخال محتوى الملاحظة');\n      passed = false;\n    }\n    setValidationErrors(validationErrors);\n    return passed;\n  };\n\n  //تغيير عنوان الملاحظة\n  const changeTitleHandler = (event) => {\n    setTitle(event.target.value);\n  };\n\n  //تغيير نص الملاحظة\n  const changeContentHandler = (event) => {\n    setContent(event.target.value);\n  };\n\n  //الانتقال إلى وضع إضافة ملاحظة\n  const addNoteHandler = () => {\n    setCreating(true);\n    setTitle('');\n    setContent('');\n    setEditing(false);\n  };\n\n  //اختيار ملاحظة\n  const selectNoteHandler = (noteId) => {\n    setSelectedNote(noteId);\n    setCreating(false);\n    setEditing(false);\n  };\n\n  //حفظ الملاحظة\n  const saveNoteHandler = () => {\n    if (!validate()) return;\n    const note = {\n      id: new Date(),\n      title: title,\n      content: content,\n    };\n    const updatedNotes = [...notes, note];\n    saveToLocalStorage('notes', updatedNotes);\n    setNotes(updatedNotes);\n    setTitle('');\n    setContent('');\n    setCreating(false);\n    setSelectedNote(note.id);\n  };\n\n  //حذف الملاحظة\n  const deleteNoteHandler = (noteId) => {\n    const updatedNotes = [...notes];\n    const noteIndex = updatedNotes.findIndex((note) => note.id === noteId);\n    updatedNotes.splice(noteIndex, 1);\n    saveToLocalStorage('notes', updatedNotes);\n    setNotes(updatedNotes);\n    setSelectedNote(null);\n  };\n\n  //الانتقال إلى وضع تعديل الملاحظة\n  const editNoteHandler = (noteId) => {\n    const note = notes.find((note) => note.id === noteId);\n\n    setEditing(true);\n    setTitle(note.title);\n    setContent(note.content);\n  };\n\n  // حفظ تعديلات الملاحظة\n  const updateNoteHandler = () => {\n    if (!validate()) return;\n    const updatedNotes = [...notes];\n    const noteIndex = notes.findIndex((note) => note.id === selectedNote);\n    updatedNotes[noteIndex] = {\n      id: selectedNote,\n      title: title,\n      content: content,\n    };\n    saveToLocalStorage('notes', updatedNotes);\n\n    setNotes(updatedNotes);\n    setEditing(false);\n    setTitle('');\n    setContent('');\n  };\n\n  //إحضار نموذج إضافة ملاحظة\n  const getAddNote = () => {\n    return (\n      <NoteForm\n        formTitle=\"ملاحظة جديدة\"\n        title={title}\n        content={content}\n        titleChanged={changeTitleHandler}\n        contentChanged={changeContentHandler}\n        submitText=\"حفظ\"\n        submitClicked={saveNoteHandler}\n        cancel={() => setCreating(false)}\n      />\n    );\n  };\n\n  //إحضار قسم عرض الملاحظة\n  const getPreview = () => {\n    if (notes.length === 0) {\n      return <Message title=\"لا يوجد ملاحظات\" />;\n    }\n\n    if (!selectedNote) {\n      return <Message title=\"الرجاء اختيار ملاحظة\" />;\n    }\n\n    const note = notes.find((note) => {\n      return note.id === selectedNote;\n    });\n\n    let noteDisplay = (\n      <div>\n        <h2>{note.title}</h2>\n        <p>{note.content}</p>\n      </div>\n    );\n\n    if (editing) {\n      noteDisplay = (\n        <NoteForm\n          formTitle=\"تعديل ملاحظة\"\n          title={title}\n          content={content}\n          titleChanged={changeTitleHandler}\n          contentChanged={changeContentHandler}\n          submitText=\"تعديل\"\n          submitClicked={updateNoteHandler}\n        />\n      );\n    }\n\n    return (\n      <div>\n        {!editing && (\n          <div className=\"note-operations\">\n            <a href=\"#\" onClick={() => editNoteHandler(note.id)}>\n              <i className=\"fa fa-pencil-alt\" />\n            </a>\n            <a href=\"#\" onClick={() => deleteNoteHandler(note.id)}>\n              <i className=\"fa fa-trash\" />\n            </a>\n          </div>\n        )}\n        {noteDisplay}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <NotesContainer>\n        <NotesList>\n          {notes.map((note) => (\n            <Note\n              key={note.id}\n              title={note.title}\n              active={selectedNote === note.id}\n              noteClicked={() => selectNoteHandler(note.id)}\n            />\n          ))}\n        </NotesList>\n        <button className=\"add-btn\" onClick={addNoteHandler}>\n          +\n        </button>\n      </NotesContainer>\n      <Preview>{creating ? getAddNote() : getPreview()}</Preview>\n\n      {validationErrors.length !== 0 && (\n        <Alert validationMessages={validationErrors} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}